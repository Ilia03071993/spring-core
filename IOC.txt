1.В чем основное преимущество IoC?
Inversion of Control - позволяет передать управление нашими компонентами Spring framework,чтобы он сам их хранил, настраивал и создавал, описывает каждую зависимость отдельно,
позволяет использовать готовый настроенный объект, без прямого вызова конструктора.

2.Чем (в общих чертах) отличается Container и Context?
Container- средство для хранения, создания и управления объектами Java(bean). Context- интерфейс, обеспечивающий доступ к Container, разработчик обращается к context под капотом которого container.

3.Почему в приложении мы работаем с объектом контекста, а не контейнера?
Context- интерфейс, обеспечивающий доступ к Container, разработчик обращается к context под капотом которого container.

4.Почему scope по умолчанию Singleton?
Для объектов без состояния или с одним состоянием всех полей(stateless) используется singleton - это часто реализуемый случай для разработчика. Бин создается сразу после прочтения container конфиг. файла и создается один экземпляр объекта для данного бина и этот экземпляр возвращается при всех запросах(ссылки которого равны). 

5.Почему singleton бины создаются сразу, а не при первом обращении? 
Singleton бины создаются сразу, а не при первом обращении, потому что Spring контейнер создает все бины во время запуска приложения, чтобы убедиться, что они корректно сконфигурированы и готовы к использованию, что увеличивает скоррость обращения к ним.

6.Привести пример конфигурации, при котором необходимо совместить два подхода: Annotation config, Java Code config.

@ComponentScan(basePackages = {"com.selivanov"})
public class AnnotationConfig {
    @Bean
       public Employee employee() {

       }
}

AnnotationConfigApplicationContext context =
    new AnnotationConfigApplicationContext(AnnotationConfig.class);

7.Почему в Части 1 Задании 5 такой результат, несмотря на использование Singleton?
Бин создается сразу после прочтения container конфиг. файла и создается один экземпляр объекта для данного бина и этот экземпляр возвращается при всех запросах(ссылки которого равны).
